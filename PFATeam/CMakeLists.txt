cmake_minimum_required(VERSION 3.21)
project(PFAProject)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++2a -pthread" )
set(CMAKE_CXX_STANDARD 20)

find_package(Boost 1.70 COMPONENTS program_options)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${Boost_INCLUDE_DIRS})
if(Boost_FOUND)
    set(Boost_INCLUDE_DIRS ${Boost_INCLUDE_DIRS})
    set(Boost_LIBRARIES ${Boost_LIBRARIES})
endif()
add_executable(PFAProject main.cpp tester.cpp writer/writer.cpp writer/writer.h memory/cmemory.h memory/MemoryProfiler.cpp memory/MemoryProfiler.h memory/ProfilableAllocator.h graph/parallel_graph.h graph/graphsplit.h graph/splitcreator.h graph/splitmerger.h utils/types.h utils/utils.h)
add_executable(PFAProjectParallel parallel_main.cpp tester.cpp writer/writer.cpp writer/writer.h memory/cmemory.h memory/MemoryProfiler.cpp memory/MemoryProfiler.h memory/ProfilableAllocator.h graph/parallel_graph.h graph/splitcreator.h graph/splitmerger.h reader/ParallelReader.h utils/types.h utils/utils.h)
add_executable(PFAProjectCFG main_cfg.cpp tester.cpp writer/writer.cpp writer/writer.h memory/cmemory.h memory/MemoryProfiler.cpp memory/MemoryProfiler.h memory/ProfilableAllocator.h graph/parallel_graph.h graph/splitcreator.h graph/splitmerger.h reader/ParallelReader.h utils/types.h utils/utils.h)
target_link_libraries(PFAProjectParallel ${Boost_LIBRARIES})
target_link_libraries(PFAProjectCFG ${Boost_LIBRARIES})

